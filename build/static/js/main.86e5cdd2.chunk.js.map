{"version":3,"sources":["components/TextForm.js","components/About.js","components/Navbars.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","props","useState","text","setText","style","color","mode","heading","className","htmlFor","placeholder","value","id","rows","onChange","event","target","backgroundColor","disabled","length","onClick","newText","toUpperCase","showAlert","toLowerCase","text1","document","getElementById","navigator","clipboard","writeText","split","join","result","finalResult","reg","match","test","toString","filter","element","About","btntext","setBtntext","myStyle","setmyStyle","type","border","Navbars","to","title","aboutText","toggleMode","role","word","lower","charAt","slice","capitalize","defaultProps","Alert","alert","msg","App","setmode","setAlert","message","setTimeout","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6LAGe,SAASA,EAASC,GAG/B,IAkDA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACE,qCACE,gCACE,oBACEC,MAAO,CACLC,MAAsB,UAAfL,EAAMM,KAAmB,QAAU,SAF9C,SAKGN,EAAMO,UAET,sBACEC,UAAU,OACVJ,MAAO,CACLC,MAAsB,UAAfL,EAAMM,KAAmB,QAAU,SAH9C,UAME,uBAAOG,QAAQ,QAAQD,UAAU,aAAjC,4BAGA,0BACEA,UAAS,uBAAkBR,EAAMM,MACjCI,YAAY,iBAEZC,MAAOT,EACPU,GAAG,QACHC,KAAK,IACLC,SAlCa,SAACC,GAEtBZ,EAAQY,EAAMC,OAAOL,QAiCbP,MAAO,CACLa,gBAAgC,UAAfjB,EAAMM,KAAmB,QAAU,UACpDD,MAAsB,UAAfL,EAAMM,KAAmB,QAAU,cAKhD,wBAAQY,SAAwB,IAAdhB,EAAKiB,OAAYX,UAAU,4BAA4BY,QAvFzD,WAEpB,IAAIC,EAAUnB,EAAKoB,cACnBnB,EAAQkB,GACRrB,EAAMuB,UAAU,yBAAyB,YAmFrC,kCAGA,wBAAQL,SAAwB,IAAdhB,EAAKiB,OAAYX,UAAU,4BAA4BY,QApFxD,WACrB,IAAIC,EAAUnB,EAAKsB,cACnBrB,EAAQkB,GACRrB,EAAMuB,UAAU,yBAAyB,YAiFrC,kCAGA,wBAAQL,SAAwB,IAAdhB,EAAKiB,OAAYX,UAAU,4BAA4BY,QAjFtD,WAEvBjB,EADc,IAEdH,EAAMuB,UAAU,sBAAsB,YA8ElC,wBAGA,wBAAQL,SAAwB,IAAdhB,EAAKiB,OAAYX,UAAU,4BAA4BY,QA1D5D,WAEjB,IAAIK,EAAQC,SAASC,eAAe,SAEpCC,UAAUC,UAAUC,UAAUL,EAAMd,OACpCX,EAAMuB,UAAU,cAAc,YAqD1B,uBAGA,wBAAQL,SAAwB,IAAdhB,EAAKiB,OAAYX,UAAU,4BAA4BY,QAlFtD,WACvB,IAAIC,EAAUnB,EAAK6B,MAAM,QACzB5B,EAAQkB,EAAQW,KAAK,MACrBhC,EAAMuB,UAAU,2BAA2B,YA+EvC,gCAGA,wBAAQL,SAAwB,IAAdhB,EAAKiB,OAAYX,UAAU,6BAA6BY,QA/EnD,WAE3B,IAIIa,EAAOC,EAJPC,EAAM,sDAKVF,EAJYP,SAASC,eAAe,SAEhBhB,MAEHyB,MAAMD,GACvBD,EAAYC,EAAIE,KAAKJ,GAErB9B,GADiB,IAAd+B,EACKD,EAAOK,WAEP,IACRtC,EAAMuB,UAAU,mBAAmB,YAkE/B,+BAIF,sBACEf,UAAU,iBACVJ,MAAO,CACLC,MAAsB,UAAfL,EAAMM,KAAmB,QAAU,SAH9C,UAME,mDACA,8BACGJ,EAAK6B,MAAM,KAAKQ,QAAO,SAACC,GACvB,OAAwB,IAAjBA,EAAQrB,UACdA,OAHL,cAGwBjB,EAAKiB,OAH7B,iBAKA,8BAAI,KAAQjB,EAAK6B,MAAM,KAAKZ,OAA5B,qBACA,yCACA,4BAAIjB,EAAKiB,OAAO,EAAEjB,EAAK,gCC3HhB,SAASuC,IACtB,MAA8BxC,mBAAS,oBAAvC,mBAAOyC,EAAP,KAAgBC,EAAhB,KACE,EAA6B1C,mBAC7B,CACII,MAAM,QACNY,gBAAgB,UAHpB,mBAAO2B,EAAP,KAAeC,EAAf,KAwBF,OACE,8BACE,sBAAKrC,UAAU,YAAYJ,MAAOwC,EAAlC,UACI,0CACF,sBAAKpC,UAAU,YAAYI,GAAG,mBAA9B,UACE,sBAAKJ,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBI,GAAG,aAApC,SACE,wBACEJ,UAAU,mBACVsC,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,OACd,gBAAc,cACd1C,MAAOwC,EAPT,iCAYF,qBACEhC,GAAG,cACHJ,UAAU,mCACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,sBAAKA,UAAU,iBAAiBJ,MAAOwC,EAAvC,UACE,8EADF,oXAOwC,IACtC,mDARF,uDAaJ,sBAAKpC,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBI,GAAG,aAApC,SACE,wBACEJ,UAAU,6BACVsC,KAAK,SACL,iBAAe,WACf,iBAAe,eACf,gBAAc,QACd,gBAAc,cACd1C,MAAOwC,EAPT,iCAYF,qBACEhC,GAAG,cACHJ,UAAU,8BACV,kBAAgB,aAChB,iBAAe,oBAJjB,SAME,sBAAKA,UAAU,iBAAiBJ,MAAOwC,EAAvC,UACE,+EADF,qXAOoD,IAClD,mDARF,uDAaJ,sBAAKpC,UAAU,iBAAf,UACE,oBAAIA,UAAU,mBAAmBI,GAAG,eAApC,SACE,wBACEJ,UAAU,6BACVsC,KAAK,SACL,iBAAe,WACf,iBAAe,iBACf,gBAAc,QACd,gBAAc,gBACd1C,MAAOwC,EAPT,iCAYF,qBACEhC,GAAG,gBACHJ,UAAU,8BACV,kBAAgB,eAChB,iBAAe,oBAJjB,SAME,sBAAKA,UAAU,iBAAiBJ,MAAOwC,EAAvC,UACE,8EADF,qXAOoD,IAClD,mDARF,0DAcR,qBAAKpC,UAAU,YAAf,SACA,wBAAQsC,KAAK,SAAS1B,QA5HN,WACK,UAAhBwB,EAAQvC,OAEPwC,EAAW,CACPxC,MAAM,QACNY,gBAAgB,QAChB8B,OAAO,oBAEXJ,EAAW,uBAGXE,EAAW,CACPxC,MAAM,QACNY,gBAAgB,UAEpB0B,EAAW,sBA6G2BnC,UAAU,uBAAtD,SAA8EkC,W,WCnIrE,SAASM,EAAQhD,GAI5B,OACI,qBAAKQ,UAAS,yCAAoCR,EAAMM,KAA1C,eAAqDN,EAAMM,MAAzE,SACN,sBAAKE,UAAU,kBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeyC,GAAG,IAAlC,SAAuCjD,EAAMkD,QAC7C,wBAAQ1C,UAAU,iBAAiBsC,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMtC,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,kBAAkB,eAAa,OAAOyC,GAAG,IAAzD,oBAEF,oBAAIzC,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWyC,GAAG,SAA9B,SAAwCjD,EAAMmD,iBAQlD,sBAAM3C,UAAS,sCAA8C,UAAbR,EAAMM,KAAe,OAAO,SAA5E,UACJ,uBAAOE,UAAU,mBAAmBY,QAASpB,EAAMoD,WAAaN,KAAK,WAAWO,KAAK,SAASzC,GAAG,2BACjG,wBAAOJ,UAAU,mBAAmBC,QAAQ,yBAA5C,wBA1BiB,SAAC6C,GAChB,IAAMC,EAAMD,EAAK9B,cACjB,OAAO+B,EAAMC,OAAO,GAAGlC,cAAciC,EAAME,MAAM,GAwBuBC,CAAW1D,EAAMM,MAA3F,+BAaF0C,EAAQW,aAAa,CACjBT,MAAM,WACNC,UAAW,SC5BAS,MAhBf,SAAe5D,GAKX,OACIA,EAAM6D,OAAU,8BACf,sBAAMrD,UAAS,sBAAiBR,EAAM6D,MAAMf,KAA7B,gCAAkEO,KAAK,QAAtF,UACG,iCAPS,SAACC,GACV,IAAMC,EAAMD,EAAK9B,cACjB,OAAO+B,EAAMC,OAAO,GAAGlC,cAAciC,EAAME,MAAM,GAKxCC,CAAW1D,EAAM6D,MAAMf,QADnC,KACqD9C,EAAM6D,MAAMC,U,OCiE3DC,MA5Df,WACE,MAAwB9D,mBAAS,SAAjC,mBAAOK,EAAP,KAAa0D,EAAb,KACA,EAA0B/D,mBAAS,MAAnC,mBAAO4D,EAAP,KAAcI,EAAd,KAWM1C,EAAU,SAAC2C,EAAQpB,GACrBmB,EAAS,CACPH,IAAII,EACJpB,KAAKA,IAEPqB,YAAW,WACTF,EAAS,QACT,MAoBN,OACE,mCACA,eAAC,IAAD,WACD,cAACjB,EAAD,CAASE,MAAM,YAAYC,UAAU,kBAAkB7C,KAAMA,EAAM8C,WArBnD,WACL,UAAP9C,GACD0D,EAAQ,QACRtC,SAAS0C,KAAKhE,MAAMa,gBAAgB,UACpCM,EAAU,8BAA8B,WACxCG,SAASwB,MAAM,6BAMfc,EAAQ,SACRtC,SAAS0C,KAAKhE,MAAMa,gBAAgB,QACpCM,EAAU,+BAA+B,WACzCG,SAASwB,MAAM,qBAQlB,cAAC,EAAD,CAAOW,MAAOA,IACd,qBAAKrD,UAAU,iBAAf,SACA,eAAC,IAAD,WACO,cAAC,IAAD,CAAO6D,OAAK,EAACC,KAAK,SAAS9B,QAAS,cAACC,EAAD,MAEpC,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,IAAI9B,QAAU,cAACzC,EAAD,CAAUwB,UAAWA,EAAWhB,QAAQ,6BAA4BD,KAAMA,iBCpDrGiE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxD,SAASC,eAAe,SAM1B4C,M","file":"static/js/main.86e5cdd2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n \r\n  const handleUpClick = () => {\r\n    // console.log(\"uppercase\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To UPPERCASE\",\"success\");\r\n  };\r\n  const handlelowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted To lowercase\",\"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Textarea is cleared\",\"success\");\r\n  };\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces are removed\",\"success\");\r\n  };\r\n\r\n  const handleEmailExtractor = () => {\r\n    // console.log(\"changed\");\r\n    let reg = /([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9_-]+)/gi;\r\n    let text1 = document.getElementById(\"mybox\");\r\n\r\n    let newText = text1.value;\r\n    let result,finalResult;\r\n    result = newText.match(reg);\r\n    finalResult=reg.test(result);\r\n    if(finalResult===true)\r\n    setText(result.toString());\r\n    else\r\n    setText('');\r\n    props.showAlert(\"Emails Extracted\",\"success\");\r\n  };\r\n  const handlecopy = () => {\r\n    // console.log(\"changed\");\r\n    let text1 = document.getElementById(\"mybox\");\r\n\r\n    navigator.clipboard.writeText(text1.value);\r\n    props.showAlert(\"Text Copied\",\"success\");\r\n  };\r\n  const handleonchange = (event) => {\r\n    // console.log(\"changed\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <div>\r\n        <h1\r\n          style={{\r\n            color: props.mode === \"light\" ? \"black\" : \"white\",\r\n          }}\r\n        >\r\n          {props.heading}\r\n        </h1>\r\n        <div\r\n          className=\"mb-3\"\r\n          style={{\r\n            color: props.mode === \"light\" ? \"black\" : \"white\",\r\n          }}\r\n        >\r\n          <label htmlFor=\"mybox\" className=\"form-label\">\r\n            Give Your Text\r\n          </label>\r\n          <textarea\r\n            className={`form-control ${props.mode}`}\r\n            placeholder=\"enter the text\"\r\n            \r\n            value={text}\r\n            id=\"mybox\"\r\n            rows=\"8\"\r\n            onChange={handleonchange}\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#9197a3\",\r\n              color: props.mode === \"light\" ? \"black\" : \"white\",\r\n              \r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>\r\n          convert to uppercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlelowClick}>\r\n          convert to lowercase\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>\r\n          clear Text\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handlecopy}>\r\n          Copy Text\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpace}>\r\n          Remove Extra Space\r\n        </button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2  my-2\" onClick={handleEmailExtractor}>\r\n          Email Extrator\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{\r\n          color: props.mode === \"light\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <h2>your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").filter((element)=>{\r\n            return element.length!==0\r\n          }).length} words and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minute to read</p>\r\n        <h2>preview</h2>\r\n        <p>{text.length>0?text:\"Enter text to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React,{useState} from \"react\";\r\n// import { isCompositeComponentWithType } from \"react-dom/test-utils\";\r\n\r\nexport default function About() {\r\n  const [btntext, setBtntext] = useState(\"Enable Dark Mode\")\r\n    const [myStyle,setmyStyle] = useState(\r\n    {\r\n        color:'black',\r\n        backgroundColor:'white'\r\n    })\r\n\r\n    const toggleStyle=()=>{\r\n        if(myStyle.color==='black')\r\n        {\r\n            setmyStyle({\r\n                color:'white',\r\n                backgroundColor:'black',\r\n                border:'1px solid white'\r\n            })\r\n            setBtntext(\"Enable Light Mode\");\r\n        }\r\n        else{\r\n            setmyStyle({\r\n                color:'black',\r\n                backgroundColor:'white'\r\n            })\r\n            setBtntext(\"Enable Dark Mode\");\r\n        }\r\n    }\r\n  return (\r\n    <div>\r\n      <div className=\"container\" style={myStyle}>\r\n          <h2>About Us</h2>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n                style={myStyle}\r\n              >\r\n                Accordion Item #1\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the first item's accordion body.</strong> It is\r\n                shown by default, until the collapse plugin adds the appropriate\r\n                classNamees that we use to style each element. These classNamees control\r\n                the overall appearance, as well as the showing and hiding via\r\n                CSS transitions. You can modify any of this with custom CSS or\r\n                overriding our default variables. It's also worth noting that\r\n                just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseTwo\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseTwo\"\r\n                style={myStyle}\r\n              >\r\n                Accordion Item #2\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the second item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classNamees that we use to style each element. These\r\n                classNamees control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n              <button\r\n                className=\"accordion-button collapsed\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseThree\"\r\n                aria-expanded=\"false\"\r\n                aria-controls=\"collapseThree\"\r\n                style={myStyle}\r\n              >\r\n                Accordion Item #3\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"accordion-collapse collapse\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-bs-parent=\"#accordionExample\"\r\n            >\r\n              <div className=\"accordion-body\" style={myStyle}>\r\n                <strong>This is the third item's accordion body.</strong> It is\r\n                hidden by default, until the collapse plugin adds the\r\n                appropriate classNamees that we use to style each element. These\r\n                classNamees control the overall appearance, as well as the showing\r\n                and hiding via CSS transitions. You can modify any of this with\r\n                custom CSS or overriding our default variables. It's also worth\r\n                noting that just about any HTML can go within the{\" \"}\r\n                <code>.accordion-body</code>, though the transition does limit\r\n                overflow.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      <div className=\"container\">\r\n      <button type=\"button\" onClick={toggleStyle} className=\"btn btn-primary my-3\">{btntext}</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbars(props) {\r\n  const capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);}\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li>\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div  className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"> {`${capitalize(props.mode)} Mode Enabled`}</label>\r\n</div>\r\n   \r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n    )\r\n}\r\n    \r\nNavbars.propTypes={title: PropTypes.string.isRequired,\r\n                aboutText:PropTypes.string.isRequired}\r\n\r\nNavbars.defaultProps={\r\n    title:'stranger',\r\n    aboutText: \"About\"\r\n};","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n            const lower=word.toLowerCase();\r\n            return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert &&  <div>\r\n         <div  className={`alert alert-${props.alert.type} alert-dismissible fade show`}  role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>  {props.alert.msg} \r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","// import logo from './logo.svg';\nimport React ,{useState} from 'react';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Navbars from './components/Navbars';\nimport Alert from './components/Alert';\n// import './index.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n  \n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light'); //wheter dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  // const [placehold, setplacehold] = useState('');\n  // const toggleplacehold=()=>{\n  //   if(placehold===\"\")\n  //   {\n  //     setplacehold('placeholdercolor');\n  //   }\n  //   else{\n  //     setplacehold(\"\");\n  //   }\n  // }\n  const showAlert=(message,type)=>{\n      setAlert({\n        msg:message,\n        type:type\n      })\n      setTimeout(()=>{\n        setAlert(null)\n      },2000);\n  }\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor=\"#2b5681\";\n      showAlert(\"Dark Mode has been  Enabled\",\"success\");\n      document.title=\"TextUtils-Home(DarkMode)\";\n      // setInterval(() => {\n      //   document.title=\"install\"\n      // }, 2000);\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light Mode has been  Enabled\",\"success\");\n      document.title=\"TextUtils-Home\";\n    }\n    \n  }\n  return (\n    <>\n    <Router>\n   <Navbars title=\"TextUtils\" aboutText=\"About_TextUtils\" mode={mode} toggleMode={toggleMode}  />\n   <Alert alert={alert}/>\n   <div className=\"container my-3\" >\n   <Routes>\n          <Route exact path=\"/about\" element={<About/>}/>\n       \n          <Route exact path=\"/\" element={ <TextForm showAlert={showAlert} heading=\"enter the text to analyse \"mode={mode}/>}/>\n               \n    </Routes>\n \n   </div>\n   </Router>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}